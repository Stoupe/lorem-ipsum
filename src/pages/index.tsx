import { LoremIpsum } from "lorem-ipsum";
import type { NextPage } from "next";
import { getSession, signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import { ChangeEvent, FormEvent, KeyboardEvent, useState } from "react";
import NavBar from "../components/NavBar";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
	const { data: text, refetch } = trpc.useQuery(["example.getWords"]);
	const { mutate: createResult } = trpc.useMutation("example.create-result");
	const [input, setInput] = useState("");
	const { data: session, status: sessionStatus } = useSession();

	if (!text) {
		return <div>Loading...</div>;
	}

	const checkInput = (e: KeyboardEvent<HTMLTextAreaElement>) => {
		if (e.key === "Backspace") {
			setInput((input) => input.slice(0, -1));
		}

		if (e.key === text[input.length]) {
			setInput((input) => input + e.key);
		}
	};

	return (
		<>
			<Head>
				<title>Create T3 App</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<NavBar />

			{sessionStatus === "authenticated" ? (
				<>
					<h1>Hello, {session.user?.name}</h1>
					<p>{session.user?.email}</p>
					<Image
						src={session.user?.image!}
						width={50}
						height={50}
						alt="Profile image"
					/>
					<button className="btn" onClick={() => signOut()}>
						log out
					</button>
				</>
			) : (
				<button className="btn" onClick={() => signIn()}>
					log in
				</button>
			)}

			<div className="p-5">
				<p>
					<span className="text-green-600">{text.slice(0, input.length)}</span>
					<span>{text.slice(input.length, text.length)}</span>
				</p>

				<form className="form-control">
					<textarea
						placeholder="Type here"
						className="textarea textarea-bordered w-full mt-5"
						onKeyDown={(e) => checkInput(e)}
						onChange={() => {}}
						value={input}
					/>
				</form>

				<button
					className="btn"
					onClick={() => {
						refetch();
					}}
				>
					regenerate
				</button>
				{sessionStatus === "authenticated" && (
					<button
						className="btn btn-primary"
						onClick={() => {
							console.log("clicked");
							createResult({
								userId: session.userId as string, //TODO: figure out why session doesn't have userId typed/how to get it there
								text: text,
								accuracy: 96,
								timeTaken: 34.32,
							});
						}}
					>
						create test result
					</button>
				)}
			</div>
		</>
	);
};

export default Home;
